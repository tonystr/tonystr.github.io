{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","pages/minesweeper.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","gridFindValue","grid","rx","ry","rw","rh","val","y","Math","max","min","x","undefined","Stopwatch","_ref","stop","_useState","useState","_useState2","slicedToArray","time","setTime","useEffect","setTimeout","floor","Minesweeper","bombCount","round","width","_useState3","height","defCell","hidden","flag","Array","from","random","map","row","cell","gridGenerate","_useState4","setGrid","_useState5","_useState6","gameState","setGameState","_useState7","_useState8","flagCount","setFlagCount","_useState9","_useState10","showCount","setShowCount","gameRef","React","useRef","cellVal","toConsumableArray","ev","e","preventDefault","current","addEventListener","removeEventListener","touchCell","mutGrid","sum","func","aroundCell","react_default","a","createElement","className","ref","onButtonDown","console","log","onClick","JSON","parse","stringify","newShowCount","gr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","gridIsSolved","onContextMenu","prev","Counter","toggle","props","_useState11","_useState12","setToggle","children","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","prototype","toString","call","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/13.7cce2989.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, { useState, useEffect } from 'react';\r\nimport '../styles/minesweeper.scss';\r\n\r\nfunction gridFindValue(grid, rx, ry, rw, rh) {\r\n    let val = 0;\r\n    for (let y = Math.max(ry - 1, 0); y < Math.min(ry + 2, rh); y++) {\r\n        for (let x = Math.max(rx - 1, 0); x < Math.min(rx + 2, rw); x++) {\r\n            if ((x === rx && y === ry) || grid[y] === undefined) continue;\r\n            if (grid[y][x].value === 9) val++;\r\n        }\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction gridGenerate(width, height, bombCount) {\r\n    const defCell = {\r\n        hidden: true,\r\n        flag: false,\r\n        value: 0\r\n    };\r\n\r\n    let grid = Array.from(\r\n        { length: height }, () => Array.from(\r\n            { length: width }, () => ({\r\n                ...defCell,\r\n                value: 0\r\n            })\r\n        )\r\n    );\r\n\r\n    while (bombCount > 0) {\r\n        const x = Math.floor(Math.random() * width);\r\n        const y = Math.floor(Math.random() * height);\r\n        if (grid[y][x].value === 0) {\r\n            grid[y][x].value = 9;\r\n            bombCount--;\r\n        }\r\n    }\r\n\r\n    grid = grid.map((row, ry) => row.map((cell, rx) => (cell.value === 0 ?\r\n        { ...cell, value: gridFindValue(grid, rx, ry, width, height) } :\r\n        cell\r\n    )));\r\n\r\n    return grid;\r\n}\r\n\r\nfunction Stopwatch({ stop }) {\r\n    const [time, setTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!stop) setTimeout(() => setTime(time + 1), 1000);\r\n    }, [time, stop]);\r\n\r\n    if (time < 60) {\r\n        return `${time}`;\r\n    } else if (time < 3600) {\r\n        return `${Math.floor(time / 60)}:${time % 60}`;\r\n    } else {\r\n        return `${Math.floor(time / 3600)}:${Math.floor(time / 60) % 60}:${time % 60}`;\r\n    }\r\n}\r\n\r\nexport default function Minesweeper() {\r\n    const width  = 46;\r\n    const height = 21;\r\n    const bombCount = Math.round(width * height * .02);\r\n\r\n    const [grid,        setGrid       ] = useState(gridGenerate(width, height, bombCount));\r\n    const [gameState,   setGameState  ] = useState('waiting');\r\n    const [flagCount,   setFlagCount  ] = useState(bombCount);\r\n    const [showCount, setShowCount] = useState(0);\r\n\r\n    const gameRef = React.useRef();\r\n    const cellVal = [' ', ...(new Array(8)), '💣', '💥'];\r\n    // const cellVal = [' ', '一', '二', '三', '四', '五', '六', '七', '八', '💣', '💥'];\r\n\r\n    useEffect(() => {\r\n        const ev = e => e.preventDefault() && false;\r\n        gameRef.current.addEventListener('contextmenu', ev);\r\n        return () => gameRef.current.removeEventListener('contextmenu', ev);\r\n    });\r\n\r\n    const aroundCell = (rx, ry, func, rw = width, rh = height) => {\r\n        for (let y = Math.max(ry - 1, 0); y < Math.min(ry + 2, rh); y++) {\r\n            for (let x = Math.max(rx - 1, 0); x < Math.min(rx + 2, rw); x++) {\r\n                if ((x !== rx || y !== ry)) {\r\n                    func(x, y);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const touchCell = (mutGrid, rx, ry, rw = width, rh = height) => {\r\n        let sum = mutGrid[ry][rx].hidden !== false;\r\n        mutGrid[ry][rx].hidden = false;\r\n        if (mutGrid[ry][rx].value < 1) aroundCell(rx, ry, (x, y) => {\r\n            if (mutGrid[y][x].hidden && !mutGrid[y][x].flag) {\r\n                sum += touchCell(mutGrid, x, y, rw, rh);\r\n            }\r\n        });\r\n        return sum;\r\n    };\r\n\r\n    const gridIsSolved = gr => {\r\n        for (let row of gr) {\r\n            for (let cell of row) {\r\n                if (cell.hidden && cell.value < 9) return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const TableContent = () => grid.map((row, ry) => (\r\n        <tr key={ry}>\r\n            {row.map((cell, rx) => (\r\n                <td\r\n                    key={rx}\r\n                    className={\r\n                        (cell.hidden ? 'hidden' : '') +\r\n                        ((!cell.hidden || gameState === 'lost') && cell.value >= 1 ? ` c-${cell.value}` : '') +\r\n                        (gameState === 'lost' && cell.flag && cell.value !== 9 ? ' flag-wrong' : '')\r\n                    }\r\n                    onClick={() => {\r\n                        if (grid[ry][rx].flag) return;\r\n                        if (gameState !== 'playing') {\r\n                            setGameState('playing');\r\n                        }\r\n\r\n                        if (grid[ry][rx].value === 9) {\r\n                            const mutGrid = JSON.parse(JSON.stringify(grid));\r\n                            mutGrid[ry][rx].value++;\r\n                            setGrid(mutGrid);\r\n                            setGameState('lost');\r\n                            return;\r\n                        }\r\n\r\n                        let mutGrid = grid;\r\n                        let newShowCount = showCount;\r\n                        if (grid[ry][rx].value >= 1) {\r\n                            mutGrid = grid.map((row, y) => row.map((cell, x) => x === rx && y === ry ?\r\n                                { ...cell, hidden: false } :\r\n                                cell\r\n                            ));\r\n                            newShowCount = showCount + 1;\r\n                        } else {\r\n                            mutGrid = JSON.parse(JSON.stringify(grid));\r\n                            newShowCount = showCount + touchCell(mutGrid, rx, ry);\r\n                        }\r\n\r\n                        setShowCount(newShowCount);\r\n                        if (width * height - newShowCount <= bombCount && gridIsSolved(mutGrid)) {\r\n                            setGameState('won');\r\n                        }\r\n                        setGrid(mutGrid);\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        if (!grid[ry][rx].hidden) return;\r\n                        if (!grid[ry][rx].flag) {\r\n                            if (flagCount <= 0) return;\r\n                        }\r\n                        if (gameState !== 'playing') {\r\n                            setGameState('playing');\r\n                        }\r\n                        setFlagCount(flagCount + grid[ry][rx].flag - !grid[ry][rx].flag);\r\n                        setGrid(prev => prev.map((row, y) => row.map((cell, x) => x === rx && y === ry ?\r\n                            { ...cell, flag: !cell.flag } :\r\n                            cell\r\n                        )));\r\n                        return false;\r\n                    }}\r\n                >\r\n                    {(cell.flag && <i className='far fa-flag' />) ||\r\n                    ((!cell.hidden || (gameState === 'lost' && cell.value > 8)) && (cellVal[cell.value] || cell.value))}\r\n                </td>\r\n            ))}\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <div\r\n            className={`minesweeper ${gameState}`}\r\n            ref={gameRef}\r\n            onButtonDown={e => console.log(e)}\r\n        >\r\n            <table className='game-grid'>\r\n                <tbody><TableContent /></tbody>\r\n            </table>\r\n            <div className='infobar'>\r\n                <Counter className='flagcount'>\r\n                    Flags: <span>{flagCount} <i className='far fa-flag' /></span>\r\n                </Counter>\r\n                <Counter className='bombcount'>\r\n                    Bombs: <span>{bombCount - flagCount} 💣</span>\r\n                </Counter>\r\n                <Counter className='grid-size'>\r\n                    Grid: <span>{width} × {height}</span>\r\n                </Counter>\r\n                <Counter className='stopwatch' toggle={true}>\r\n                    Time: <span className={gameState !== 'playing' ? 'stop' : ''}>\r\n                        <Stopwatch stop={gameState !== 'playing'} />\r\n                    </span>\r\n                </Counter>\r\n                <Counter className='grid-size'>\r\n                    HiddenCount: <span>{showCount}</span>\r\n                </Counter>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Counter(props) {\r\n    const [toggle, setToggle] = useState(props.toggle || false);\r\n\r\n    return (\r\n        <div\r\n            className={(props.className || '') + ' counter' + (toggle ? ' toggle' : '')}\r\n            onClick={() => setToggle(!toggle)}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}