{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","pages/Minesweeper.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","gridFindValue","grid","rx","ry","rw","rh","val","y","Math","max","min","x","undefined","gridGenerate","width","height","bombCount","defCell","hidden","flag","Array","from","floor","random","map","row","cell","Stopwatch","_ref","stop","_useState","useState","_useState2","slicedToArray","time","setTime","useEffect","setTimeout","TableContent","props","placeFlag","flagCount","gameState","setGameState","setFlagCount","setGrid","prev","aroundCell","func","cellVal","toConsumableArray","react_default","a","createElement","className","onClick","ctrl","mutGrid","JSON","parse","stringify","newShowCount","showCount","mgc","touchCell","sum","setShowCount","gr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","gridIsSolved","onContextMenu","Minesweeper","round","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setCtrl","gameRef","React","useRef","ev","e","preventDefault","current","addEventListener","kde","window","keyCode","kue","removeEventListener","ref","Counter","role","aria-label","toggle","title","class","_useState13","_useState14","setToggle","children","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","prototype","toString","call","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/14.1169ac06.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, { useState, useEffect } from 'react';\r\nimport '../styles/minesweeper.scss';\r\n\r\nfunction gridFindValue(grid, rx, ry, rw, rh) {\r\n    let val = 0;\r\n    for (let y = Math.max(ry - 1, 0); y < Math.min(ry + 2, rh); y++) {\r\n        for (let x = Math.max(rx - 1, 0); x < Math.min(rx + 2, rw); x++) {\r\n            if ((x === rx && y === ry) || grid[y] === undefined) continue;\r\n            if (grid[y][x].value === 9) val++;\r\n        }\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction gridGenerate(width, height, bombCount) {\r\n    const defCell = {\r\n        hidden: true,\r\n        flag: false,\r\n        value: 0\r\n    };\r\n\r\n    let grid = Array.from(\r\n        { length: height }, () => Array.from(\r\n            { length: width }, () => ({\r\n                ...defCell,\r\n                value: 0\r\n            })\r\n        )\r\n    );\r\n\r\n    while (bombCount > 0) {\r\n        const x = Math.floor(Math.random() * width);\r\n        const y = Math.floor(Math.random() * height);\r\n        if (grid[y][x].value === 0) {\r\n            grid[y][x].value = 9;\r\n            bombCount--;\r\n        }\r\n    }\r\n\r\n    grid = grid.map((row, ry) => row.map((cell, rx) => (cell.value === 0 ?\r\n        { ...cell, value: gridFindValue(grid, rx, ry, width, height) } :\r\n        cell\r\n    )));\r\n\r\n    return grid;\r\n}\r\n\r\nfunction Stopwatch({ stop }) {\r\n    const [time, setTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!stop) setTimeout(() => setTime(time + 1), 1000);\r\n    }, [time, stop]);\r\n\r\n    if (time < 60) {\r\n        return `${time}`;\r\n    } else if (time < 3600) {\r\n        return `${Math.floor(time / 60)}:${time % 60}`;\r\n    } else {\r\n        return `${Math.floor(time / 3600)}:${Math.floor(time / 60) % 60}:${time % 60}`;\r\n    }\r\n}\r\n\r\nfunction gridIsSolved(gr) {\r\n    for (let row of gr) {\r\n        for (let cell of row) {\r\n            if (cell.hidden && cell.value < 9) return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction TableContent(props) {\r\n\r\n    const placeFlag = (rx, ry) => {\r\n        if (!props.grid[ry][rx].hidden) return;\r\n        if (!props.grid[ry][rx].flag && props.flagCount <= 0) return;\r\n        if (props.gameState !== 'playing') props.setGameState('playing');\r\n\r\n        props.setFlagCount(props.flagCount + props.grid[ry][rx].flag - !props.grid[ry][rx].flag);\r\n        props.setGrid(prev => prev.map((row, y) => row.map((cell, x) => x === rx && y === ry ?\r\n            { ...cell, flag: !cell.flag } :\r\n            cell\r\n        )));\r\n\r\n        return false;\r\n    }\r\n\r\n    const touchCell = (mutGrid, rx, ry, rw = props.width, rh = props.height) => {\r\n        let sum = mutGrid[ry][rx].hidden !== false;\r\n        mutGrid[ry][rx].hidden = false;\r\n        if (mutGrid[ry][rx].value < 1) aroundCell(rx, ry, (x, y) => {\r\n            if (mutGrid[y][x].hidden && !mutGrid[y][x].flag) {\r\n                sum += touchCell(mutGrid, x, y, rw, rh);\r\n            }\r\n        });\r\n        return sum;\r\n    };\r\n\r\n    const aroundCell = (rx, ry, func, rw = props.width, rh = props.height) => {\r\n        for (let y = Math.max(ry - 1, 0); y < Math.min(ry + 2, rh); y++) {\r\n            for (let x = Math.max(rx - 1, 0); x < Math.min(rx + 2, rw); x++) {\r\n                if ((x !== rx || y !== ry)) {\r\n                    func(x, y);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const cellVal = [' ', ...(new Array(8)), '💣', '💥'];\r\n\r\n    return props.grid.map((row, ry) => (\r\n        <tr key={ry}>\r\n            {row.map((cell, rx) => (\r\n                <td\r\n                    key={rx}\r\n                    className={\r\n                        (cell.hidden ? 'hidden' : '') +\r\n                        ((!cell.hidden || props.gameState === 'lost') && cell.value >= 1 ? ` c-${cell.value}` : '') +\r\n                        (props.gameState === 'lost' && cell.flag && cell.value !== 9 ? ' flag-wrong' : '')\r\n                    }\r\n                    onClick={props.gameState !== 'lost' && (\r\n                        props.ctrl ? (\r\n                            () => placeFlag(rx, ry)\r\n                        ) : (\r\n                            !cell.flag && (cell.value === 9 ? () => {\r\n                                const mutGrid = JSON.parse(JSON.stringify(props.grid));\r\n                                mutGrid[ry][rx].value++;\r\n                                props.setGrid(mutGrid);\r\n                                props.setGameState('lost');\r\n                            } : () => {\r\n                                if (props.gameState === 'waiting') props.setGameState('playing');\r\n\r\n                                let mutGrid = props.grid;\r\n                                let newShowCount = props.showCount;\r\n                                if (cell.value >= 1) {\r\n                                    mutGrid = props.grid.map((row, y) => row.map((mgc, x) => x === rx && y === ry ?\r\n                                        { ...mgc, hidden: false } :\r\n                                        mgc\r\n                                    ));\r\n                                    newShowCount = props.showCount + 1;\r\n                                } else {\r\n                                    mutGrid = JSON.parse(JSON.stringify(props.grid));\r\n                                    newShowCount = props.showCount + touchCell(mutGrid, rx, ry);\r\n                                }\r\n\r\n                                props.setShowCount(newShowCount);\r\n                                if (props.width * props.height - newShowCount <= props.bombCount && gridIsSolved(mutGrid)) {\r\n                                    props.setGameState('won');\r\n                                }\r\n                                props.setGrid(mutGrid);\r\n                            })\r\n                        )\r\n                    )}\r\n                    onContextMenu={props.gameState !== 'lost' && (() => placeFlag(rx, ry))}\r\n                >\r\n                    {(cell.flag && <i className='far fa-flag' />) ||\r\n                    ((!cell.hidden || (props.gameState === 'lost' && cell.value > 8)) && (cellVal[cell.value] || cell.value))}\r\n                </td>\r\n            ))}\r\n        </tr>\r\n    ));\r\n}\r\n\r\nexport default function Minesweeper() {\r\n    const width  = 46;\r\n    const height = 21;\r\n    const bombCount = Math.round(width * height * .2);\r\n\r\n    const [grid,      setGrid     ] = useState(gridGenerate(width, height, bombCount));\r\n    const [gameState, setGameState] = useState('waiting');\r\n    const [flagCount, setFlagCount] = useState(bombCount);\r\n    const [showCount, setShowCount] = useState(0);\r\n    const [ctrl,      setCtrl     ] = useState(false);\r\n\r\n    const gameRef = React.useRef();\r\n    // const cellVal = [' ', '一', '二', '三', '四', '五', '六', '七', '八', '💣', '💥'];\r\n\r\n    useEffect(() => {\r\n        const ev = e => e.preventDefault() && false;\r\n        gameRef.current.addEventListener('contextmenu', ev);\r\n        const kde = window.addEventListener('keydown', e => (\r\n            e.keyCode === 17 && !ctrl && setCtrl(true)\r\n        ));\r\n        const kue = window.addEventListener('keyup', e => {\r\n            e.keyCode === 17 && ctrl && setCtrl(false)\r\n        });\r\n        return () => {\r\n            gameRef.current.removeEventListener('contextmenu', ev);\r\n            window.removeEventListener('keydown', kde);\r\n            window.removeEventListener('keyup', kue);\r\n        }\r\n    });\r\n\r\n    const gameRestart = () => {\r\n        setGrid(gridGenerate(width, height, bombCount));\r\n        setGameState('waiting');\r\n        setFlagCount(bombCount);\r\n        setShowCount(0);\r\n        setCtrl(false);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`minesweeper ${gameState}`}\r\n            ref={gameRef}\r\n        >\r\n            <table className='game-grid'>\r\n                <tbody>\r\n                    <TableContent\r\n                        grid={grid}\r\n                        setGrid={setGrid}\r\n                        flagCount={flagCount}\r\n                        setFlagCount={setFlagCount}\r\n                        gameState={gameState}\r\n                        setGameState={setGameState}\r\n                        showCount={showCount}\r\n                        setShowCount={setShowCount}\r\n                        width={width}\r\n                        height={height}\r\n                        bombCount={bombCount}\r\n                        ctrl={ctrl}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n            <div className='infobar'>\r\n                <Counter className='flagcount'>\r\n                    Flags: <span>{flagCount} <i className='far fa-flag' /></span>\r\n                </Counter>\r\n                <Counter className='bombcount'>\r\n                    Bombs: <span>{bombCount - flagCount} <span role='img' aria-label='bomb'>💣</span></span>\r\n                </Counter>\r\n                <Counter className='grid-size'>\r\n                    Grid: <span>{width} × {height}</span>\r\n                </Counter>\r\n                <Counter className='stopwatch' toggle={true}>\r\n                    Time: <span className={gameState !== 'playing' ? 'stop' : ''}>\r\n                        <Stopwatch stop={gameState !== 'playing'} />\r\n                    </span>\r\n                </Counter>\r\n                <div\r\n                    className='counter'\r\n                    title='restart'\r\n                    onClick={gameRestart}\r\n                >\r\n                    <i class=\"fas fa-redo\"></i>\r\n                </div>\r\n                {gameState === 'won' && <div> You win! </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Counter(props) {\r\n    const [toggle, setToggle] = useState(props.toggle || false);\r\n\r\n    return (\r\n        <div\r\n            className={(props.className || '') + ' counter' + (toggle ? ' toggle' : '')}\r\n            onClick={e => {\r\n                setToggle(!toggle)\r\n                if (props.onClick) props.onClick(e);\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}