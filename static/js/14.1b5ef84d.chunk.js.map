{"version":3,"sources":["pages/paint.jsx"],"names":["canvasDraw","e","ctx","document","getElementById","getContext","x","clientX","y","clientY","px","window","mousePrevious","down","py","beginPath","lineWidth","strokeStyle","lineCap","moveTo","lineTo","stroke","Paint","_useState","useState","width","innerWidth","height","innerHeight","_useState2","Object","C_Users_Tony_Documents_Webdev_tonystr_website_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","canvasSize","setCanvasSize","useEffect","updateCanvasSize","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","id","onMouseDown","onMouseUp","onClick"],"mappings":"mKAIA,SAASA,EAAWC,GAChB,IACMC,EADSC,SAASC,eAAe,UACpBC,WAAW,MAExBC,EAAIL,EAAEM,QACNC,EAAIP,EAAEQ,QACNC,EAAKC,OAAOC,cAAcC,KAAOF,OAAOC,cAAcN,EAAIA,EAC1DQ,EAAKH,OAAOC,cAAcC,KAAOF,OAAOC,cAAcJ,EAAIA,EAGhEN,EAAIa,YACJb,EAAIc,UAAY,EAChBd,EAAIe,YAAc,UAClBf,EAAIgB,QAAU,QACdhB,EAAIiB,OAAOT,EAAII,GACfZ,EAAIkB,OAAOd,EAAGE,GACdN,EAAImB,SAEJV,OAAOC,cAAgB,CACnBN,EAAGA,EACHE,EAAGA,EACHK,MAAM,GAIC,SAASS,IAAQ,IAAAC,EACQC,mBAAS,CACzCC,MAAQd,OAAOe,WACfC,OAAQhB,OAAOiB,YAAc,MAHLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACrBS,EADqBH,EAAA,GACTI,EADSJ,EAAA,GAiB5B,OAXAK,oBAAU,WACN,IAAMC,EAAmB,kBAAMF,EAAc,CACzCR,MAAQd,OAAOe,WACfC,OAAQhB,OAAOiB,YAAc,OAKjC,OAFAjB,OAAOyB,iBAAiB,SAAUD,GAE3B,kBAAMxB,OAAO0B,oBAAoB,SAAUF,KACnD,IAGCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIf,MAAOO,EAAWP,MAClBE,OAAQK,EAAWL,OACnBe,GAAG,SACHC,YAAa,SAAA1C,GACTD,EAAWC,GACXE,SAASiC,iBAAiB,YAAcpC,IAE5C4C,UAAW,WACPzC,SAASkC,oBAAoB,YAAarC,GAC1CW,OAAOC,cAAcC,MAAO,GAEhCgC,QAAS,SAAA5C,GACLD,EAAWC,GACXU,OAAOC,cAAcC,MAAO,KAGpCyB,EAAAC,EAAAC,cAAA,YAAUE,GAAG,aA/DzB/B,OAAOC,cAAgB,CAAEN,EAAG,KAAME,EAAG,KAAMK,MAAM","file":"static/js/14.1b5ef84d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nwindow.mousePrevious = { x: null, y: null, down: false };\r\n\r\nfunction canvasDraw(e) {\r\n    const canvas = document.getElementById('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n    const px = window.mousePrevious.down ? window.mousePrevious.x : x;\r\n    const py = window.mousePrevious.down ? window.mousePrevious.y : y;\r\n    // const dis = Math.sqrt(Math.pow(x - px, 2) + Math.pow(y - py, 2));\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 5;\r\n    ctx.strokeStyle = '#ffffff';\r\n    ctx.lineCap = 'round';\r\n    ctx.moveTo(px, py);\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n\r\n    window.mousePrevious = {\r\n        x: x,\r\n        y: y,\r\n        down: true\r\n    }\r\n}\r\n\r\nexport default function Paint() {\r\n    const [canvasSize, setCanvasSize] = useState({\r\n        width:  window.innerWidth,\r\n        height: window.innerHeight - 138\r\n    });\r\n\r\n    useEffect(() => {\r\n        const updateCanvasSize = () => setCanvasSize({\r\n            width:  window.innerWidth,\r\n            height: window.innerHeight - 138\r\n        });\r\n\r\n        window.addEventListener('resize', updateCanvasSize);\r\n\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='paint'>\r\n            <canvas\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                id='canvas'\r\n                onMouseDown={e => {\r\n                    canvasDraw(e);\r\n                    document.addEventListener('mousemove',  canvasDraw);\r\n                }}\r\n                onMouseUp={() => {\r\n                    document.removeEventListener('mousemove', canvasDraw)\r\n                    window.mousePrevious.down = false;\r\n                }}\r\n                onClick={e => {\r\n                    canvasDraw(e);\r\n                    window.mousePrevious.down = false;\r\n                }}\r\n            />\r\n            <textarea id='copybox' />\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}