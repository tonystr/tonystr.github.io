{"version":3,"sources":["components/WebdevPage.jsx","functions/requestRawText.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js"],"names":["WebDevPage","_useState","useState","_useState2","Object","C_Users_Tony_Documents_Webdev_tonystr_website_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","codePreview","setCodePreview","useEffect","requestRawText","res","concat","__webpack_require__","e","then","t","bind","Prism","highlightAll","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","id","_components_SectionTitle_jsx__WEBPACK_IMPORTED_MODULE_2__","content","list","i","websites","length","site","push","key","target","href","url","rel","name","alt","src","image","role","renderWebsites","_components_A_jsx__WEBPACK_IMPORTED_MODULE_5__","to","_x","_x2","_requestRawText","apply","this","arguments","_callee","path","callback","xhttp","C_Users_Tony_Documents_Webdev_tonystr_website_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","stop","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","args","err","undefined","d","__webpack_exports__","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","keys","object","reverse","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"static/js/9.b8234739.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SectionTitle from '../components/SectionTitle.jsx';\r\nimport websites from '../data/websites';\r\nimport requestRawText from '../functions/requestRawText.jsx';\r\nimport A from '../components/A.jsx';\r\n\r\nexport default function WebDevPage() {\r\n\r\n    const [codePreview, setCodePreview] = useState('loading...');\r\n\r\n    useEffect(() => {\r\n        requestRawText('https://raw.githubusercontent.com/tonystr/tonystr.github.io/master/src/pages/home.jsx', res => {\r\n            setCodePreview(`${res}\\n${res}`);\r\n            import('./../prism.js').then(Prism => Prism.highlightAll());\r\n        });\r\n    }, []);\r\n\r\n    const renderWebsites = () => {\r\n        const list = [];\r\n\r\n        for (let i = 0; i < websites.length; i++) {\r\n            const site = websites[i];\r\n            list.push(\r\n                <div className='website' key={i}>\r\n                    <a target='_blank' href={site.url} rel=\"noopener noreferrer\">\r\n                        <div className='name'>{site.name}</div>\r\n                        <img alt={'image: ' + site.name} src={site.image} />\r\n                        <div className='role'>{site.role}</div>\r\n                    </a>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    return (\r\n        <section className='page' id='webdev'>\r\n            <div className='left'>\r\n                <div className='codeWrapper'>\r\n                    {codePreview && <pre><code className='prism language-jsx'>{codePreview}</code></pre>}\r\n                </div>\r\n            </div>\r\n            <div className='right'>\r\n                <div className='wrapper'>\r\n                    <SectionTitle className='title' content='Web development' />\r\n                    <div className='showcase'>\r\n                        <div className='gridview'>{renderWebsites()}</div>\r\n                    </div>\r\n                    <div className='description'>\r\n                        <div className='window'>\r\n                            <img src='images/window.png' alt='window' />\r\n                            <span className='name'>TonyStr</span>\r\n                        </div>\r\n                        <div className='inner'>\r\n                            I specialize in <A to='https://reactjs.org/'>React.js</A> and <A to='https://sass-lang.com/'>SCSS</A> for\r\n                            front-end web development, though I also have experience\r\n                            with <A to='https://vuejs.org'>Vue.js</A> and <A to='https://www.styled-components.com/'>styled-components</A>, because\r\n                            I love trying out new technologies. Some of the websites displayed above are also written in plain html/css/js\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","export default async function requestRawText(path, callback) {\r\n    const xhttp = new XMLHttpRequest();\r\n    xhttp.onreadystatechange = () => {\r\n        if (xhttp.readyState === 4 && xhttp.status === 200 && xhttp.responseText) {\r\n            callback(xhttp.responseText);\r\n        }\r\n    }\r\n    xhttp.open('GET', path, true);\r\n    xhttp.send();\r\n}\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());"],"sourceRoot":""}