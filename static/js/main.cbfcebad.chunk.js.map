{"version":3,"sources":["components/WindowCenter.jsx","components/PageLoading.jsx","serviceWorker.js","components/Footer.jsx","index.js","components/A.jsx"],"names":["WindowCenter","props","className","children","PageLoading","Boolean","window","location","hostname","match","Footer","A","to","Header","lazy","StandardPage","ASCIITable","Home","Article","ArticleLogin","Dracula","Articles","Snippets","Paint","Minesweeper","Snake","Radicals","Kanji","ValidateArticle","useState","login","setLogin","loc","pathname","toLowerCase","article","articlesJSON","find","name","password","localStorage","getItem","attemptLogin","val","setItem","fallback","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","test","href","target"],"mappings":"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","file":"static/js/main.cbfcebad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function WindowCenter(props) {\r\n    return (\r\n        <div {...props}>\r\n            <div className='window-center'>\r\n                <div className='center'>{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport WindowCenter from './WindowCenter.jsx';\r\n\r\nexport default function PageLoading(props) {\r\n    return (\r\n        <WindowCenter className='page-loading'>\r\n            Loading...\r\n            <div className='loader' />\r\n        </WindowCenter>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport A from '../components/A.jsx';\r\nimport '../styles/footer.scss';\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer>\r\n            <div className='content'>\r\n                This website uses <A to='https://fontawesome.com/'>FontAwesome</A> by\r\n                Dave Gandy, <A to='https://widgetpack.com/comment-system'>Widget Pack</A> comment\r\n                system, <A to='https://prismjs.com/'>Prism.js</A> syntax highlighter by\r\n                Golmote and Jannik Zschiesche, and <A to='https://reactjs.org/'>React.js</A> by\r\n                Facebook.\r\n                <div className='tony'>\r\n                    Designed and developed by <A to='/'>Tony Strømsnæs</A>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","import React, { useState, Suspense, lazy } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport './prism.css';\r\nimport './styles/index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport articlesJSON from './data/articles.json';\r\nimport Footer       from './components/Footer.jsx';\r\nimport WindowCenter from './components/WindowCenter.jsx';\r\nimport PageLoading  from './components/PageLoading.jsx';\r\nconst Header       = lazy(() => import('./components/Header.jsx'));\r\nconst StandardPage = lazy(() => import('./components/StandardPage.jsx'));\r\nconst ASCIITable   = lazy(() => import('./components/ASCIITable.jsx'));\r\nconst Home         = lazy(() => import('./pages/Home.jsx'));\r\nconst Article      = lazy(() => import('./pages/Article.jsx'));\r\nconst ArticleLogin = lazy(() => import('./pages/ArticleLogin.jsx'));\r\nconst Dracula      = lazy(() => import('./pages/Dracula.jsx'));\r\nconst Articles     = lazy(() => import('./pages/Articles.jsx'));\r\nconst Snippets     = lazy(() => import('./pages/Snippets.jsx'));\r\nconst Paint        = lazy(() => import('./pages/Paint.jsx'));\r\nconst Minesweeper  = lazy(() => import('./pages/Minesweeper.jsx'));\r\nconst Snake        = lazy(() => import('./pages/Snake.jsx'));\r\nconst Radicals     = lazy(() => import('./pages/Radicals.jsx'));\r\nconst Kanji        = lazy(() => import('./pages/Kanji.jsx'));\r\n\r\nfunction ValidatePage(props) {\r\n    const location = (window.location.pathname.match(/\\/([^/]*)\\/?$/)[1] || '').toLowerCase();\r\n    const article = articlesJSON.find(article => article.name.toLowerCase() === location);\r\n\r\n    return article ? <ValidateArticle loc={location} article={article} /> : null;\r\n}\r\n\r\nfunction ASCIIPage() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <StandardPage>\r\n                <ASCIITable />\r\n            </StandardPage>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ValidateArticle(props) {\r\n    const [login, setLogin] = useState(null);\r\n\r\n    const location = props.loc || (window.location.pathname.match(/\\/([^/]*)\\/?$/)[1] || '').toLowerCase();\r\n    const article = props.article || articlesJSON.find(article => article.name.toLowerCase() === location);\r\n\r\n    return article ? (\r\n        !article.password || window.localStorage.getItem('article-password') === article.password ? (\r\n            <Article article={article} login={login} />\r\n        ) : (\r\n            <ArticleLogin article={article} attemptLogin={val => {\r\n                window.localStorage.setItem('article-password', val);\r\n                setLogin(val);\r\n            }} />\r\n        )\r\n    ) : <WindowCenter> 404! Could not find any article by the name \"{location}\" </WindowCenter>;\r\n}\r\n\r\nconst fallback = <PageLoading />;\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <div>\r\n            <Suspense fallback={fallback}>\r\n                <Route exact path='/'                  component={Home} />\r\n                <Route       path='/articles'          component={Articles} />\r\n                <Route       path='/snippets'          component={Snippets} />\r\n                <Route       path='/minesweeper'       component={Minesweeper} />\r\n                <Route       path='/snake'             component={Snake} />\r\n                <Route       path='/page_loading'      component={PageLoading} />\r\n                <Route       path='/dracula'           component={Dracula} />\r\n                <Route       path='/ascii'             component={ASCIIPage} />\r\n                <Route       path='/paint'             component={Paint} />\r\n                <Route       path='/kanji'             component={Kanji} />\r\n                <Route       path='/radicals'          component={Radicals} />\r\n                <Route exact path='/:page'             component={ValidatePage} />\r\n                <Route exact path='/a/:article'        component={ValidateArticle} />\r\n                <Route exact path='/article/:article'  component={ValidateArticle} />\r\n                <Route exact path='/articles/:article' component={ValidateArticle} />\r\n                <Footer />\r\n            </Suspense>\r\n        </div>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// Read about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function A(props) {\r\n    return props.to && !/^https?:\\/\\//i.test(props.to) ? (\r\n        <Link\r\n            {...props}\r\n            className={'link ' + (props.className || '')}\r\n            to={props.to}\r\n        />\r\n    ) : (\r\n        <a\r\n            {...props}\r\n            className={'link ' + (props.className || '')}\r\n            href={props.to || props.href}\r\n            target={'_blank' || props.target}\r\n        >\r\n            {props.children}\r\n        </a>\r\n    );\r\n}\r\n"],"sourceRoot":""}